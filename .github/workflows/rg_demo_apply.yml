name: 'Azure RG Terraform Workflow'
 
on:
  # push:
  #   branches:
  #   - main
  # pull_request:
    push:
      paths:
        - 'terraform/azure/rg_demo/**'
      branches: [ "main" ]
    pull_request:
      paths:
        - 'terraform/azure/rg_demo/**'
      branches: [ "main" ]
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    environment: lab
 
    defaults:
      run:
        working-directory: ${{ vars.tf_actions_working_dir }}
    # permissions:
    #   pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v3
    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
    
    # - uses: actions/github-script@v6
    #   if: github.event_name == 'pull_request'
    #   env:
    #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     script: |
    #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
    #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
    #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
    #       <details><summary>Validation Output</summary>
    
    #       \`\`\`\n
    #       ${{ steps.validate.outputs.stdout }}
    #       \`\`\`
    
    #       </details>
    
    #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
    
    #       <details><summary>Show Plan</summary>
    
    #       \`\`\`\n
    #       ${process.env.PLAN}
    #       \`\`\`
    
    #       </details>
    
    #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ vars.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
    
    #       github.rest.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: output
    #       })

    - name: Terraform Apply
      id: apply
      run: terraform apply -no-color -auto-approve
      continue-on-error: true